spi_falcon: support 4byte addressing modes as used for flashes > 128Mbit

--- a/drivers/spi/spi-falcon.c
+++ b/drivers/spi/spi-falcon.c
@@ -3,7 +3,8 @@
  *  under the terms of the GNU General Public License version 2 as published
  *  by the Free Software Foundation.
  *
- *  Copyright (C) 2012 Thomas Langer <thomas.langer@lantiq.com>
+ *  Copyright (C) 2012, 2015 Lantiq Beteiligungs-GmbH & Co. KG
+ *  Thomas Langer <thomas.langer@lantiq.com>
  */
 
 #include <linux/module.h>
@@ -62,6 +63,7 @@
 #define SFTIME_SCKF_POS_MASK	0x0000F000
 /* Device Size */
 #define SFCON_DEV_SIZE_A23_0	0x03000000
+#define SFCON_DEV_SIZE_A31_0	0x0B000000
 #define SFCON_DEV_SIZE_MASK	0x0F000000
 /* Read Data Position */
 #define SFTIME_RD_POS_MASK	0x000F0000
@@ -212,14 +214,12 @@ int falcon_sflash_xfer(struct spi_device
 			alen = 0;
 			dumlen = 0;
 			while (bytelen > 0) {
-				if (alen < 3) {
+				if (alen < 4) {
+					/* up to 4 bytes can by handled as address */
 					val = (val << 8) | (*txp++);
 					alen++;
-				} else if ((dumlen < 15) && (*txp == 0)) {
-					/*
-					 * assume dummy bytes are set to 0
-					 * from upper layer
-					 */
+				} else if (dumlen < 15) {
+					/* assume additional bytes are dummy */
 					dumlen++;
 					txp++;
 				} else {
@@ -395,8 +395,8 @@ static int falcon_sflash_setup(struct sp
 	ltq_ebu_w32(BUSRCON0_AGEN_SERIAL_FLASH | BUSRCON0_PORTW_8_BIT_MUX,
 			BUSRCON0);
 	ltq_ebu_w32(BUSWCON0_AGEN_SERIAL_FLASH, BUSWCON0);
-	/* set address wrap around to maximum for 24-bit addresses */
-	ltq_ebu_w32_mask(SFCON_DEV_SIZE_MASK, SFCON_DEV_SIZE_A23_0, SFCON);
+	/* set address wrap around to maximum for 32-bit addresses */
+	ltq_ebu_w32_mask(SFCON_DEV_SIZE_MASK, SFCON_DEV_SIZE_A31_0, SFCON);
 
 	binsem_unlock();
 
